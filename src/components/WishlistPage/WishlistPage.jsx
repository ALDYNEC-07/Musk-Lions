// components/WishlistPage/WishlistPage.jsx
import React, { useState, useEffect } from 'react';
import { useWishlist } from '../../context/WishlistContext';
import { useCart } from '../../context/CartContext';
import { Link } from 'react-router-dom';
import SmokeAnimation from '../SmokeAnimation/SmokeAnimation';
import WishlistButton from '../WishlistButton/WishlistButton';
import './WishlistPage.css';

const WishlistPage = () => {
  const { wishlist, clearWishlist } = useWishlist();
  const { addItem } = useCart();
  const [showSmoke, setShowSmoke] = useState(false);
  const [smokePosition, setSmokePosition] = useState({ x: 0, y: 0 });
  const [addedProducts, setAddedProducts] = useState([]); // ‚úÖ –î–û–ë–ê–í–ò–õ–ò –°–û–°–¢–û–Ø–ù–ò–ï

  // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤ –Ω–∞—á–∞–ª–æ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  useEffect(() => {
    window.scrollTo({ top: 0, behavior: 'smooth' });
  }, []);

  const handleAddToCart = (product, event) => {
    const card = event.target.closest('.wishlist-product-card');
    const image = card.querySelector('.wishlist-product-image');
    const rect = image.getBoundingClientRect();
    
    setSmokePosition({
      x: rect.left + rect.width / 2,
      y: rect.top + rect.height / 6
    });

    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É
    addItem(product);
    
    // ‚úÖ –î–û–ë–ê–í–õ–Ø–ï–ú ID –¢–û–í–ê–†–ê –í –ú–ê–°–°–ò–í –î–û–ë–ê–í–õ–ï–ù–ù–´–•
    setAddedProducts(prev => [...prev, product.id]);
    
    setShowSmoke(true);
    
    // ‚úÖ –ß–ï–†–ï–ó 2 –°–ï–ö–£–ù–î–´ –£–ë–ò–†–ê–ï–ú –ù–ê–î–ü–ò–°–¨ "–î–û–ë–ê–í–õ–ï–ù–û"
    setTimeout(() => {
      setShowSmoke(false);
      setAddedProducts(prev => prev.filter(id => id !== product.id));
    }, 2000);
  };

  // –ü—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  if (wishlist.length === 0) {
    return (
      <div className="wishlist-page empty">
        <div className="wishlist-empty-content">
          <div className="empty-heart">ü§ç</div>
          <h2>–í–∞—à–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –ø—É—Å—Ç–æ</h2>
          <p>–î–æ–±–∞–≤–ª—è–π—Ç–µ –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏–µ—Å—è –ø–∞—Ä—Ñ—é–º—ã, –Ω–∞–∂–∏–º–∞—è –Ω–∞ —Å–µ—Ä–¥–µ—á–∫–∏</p>
          <Link to="/" className="back-to-products">
            ‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è
          </Link>
        </div>
      </div>
    );
  }

  return (
    <div className="wishlist-page">
      <div className="wishlist-header">
        <h1>–ò–∑–±—Ä–∞–Ω–Ω–æ–µ</h1>
        <div className="wishlist-stats">
          <button 
            onClick={clearWishlist} 
            className="clear-wishlist-btn"
          >
            –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ
          </button>
        </div>
      </div>
      
      <div className="wishlist-grid">
        {wishlist.map(product => {
          const isAdded = addedProducts.includes(product.id); // ‚úÖ –ü–†–û–í–ï–†–Ø–ï–ú –î–û–ë–ê–í–õ–ï–ù –õ–ò –¢–û–í–ê–†
          
          return (
            <div key={product.id} className="wishlist-product-card">
              <div className="wishlist-product-image">
                <img src={product.image} alt={product.name} />
                <div className="wishlist-button-container">
                  <WishlistButton product={product} />
                </div>
              </div>
              
              <div className="wishlist-product-info">
                <h3>{product.name}</h3>
                <p>{product.description}</p>
                <div className="wishlist-product-price">{product.price}</div>
                <button 
                  className={`wishlist-add-to-cart ${isAdded ? 'added' : ''}`}
                  onClick={(e) => handleAddToCart(product, e)}
                  disabled={isAdded} // ‚úÖ –ë–õ–û–ö–ò–†–£–ï–ú –ö–ù–û–ü–ö–£ –ù–ê –í–†–ï–ú–Ø –ê–ù–ò–ú–ê–¶–ò–ò
                >
                  {isAdded ? '–î–æ–±–∞–≤–ª–µ–Ω–æ ‚úì' : '–í –∫–æ—Ä–∑–∏–Ω—É'}
                </button>
              </div>
            </div>
          );
        })}
      </div>

      {showSmoke && (
        <SmokeAnimation
          startPosition={smokePosition}
          onComplete={() => setShowSmoke(false)}
        />
      )}
    </div>
  );
};

export default WishlistPage;