import React, { useRef, useEffect } from 'react';
import './SearchBar.css';
import { useSearch } from '../../hooks/useSearch';


const SearchBar = ({onResultClick}) => {
  const {
    searchQuery,
    setSearchQuery,
    searchResults,
    isSearchOpen,
    openSearch,
    closeSearch,
    hasResults
  } = useSearch();

  const searchRef = useRef(null);
  const inputRef = useRef(null);

  useEffect(() => {
    const handleClickOutside = (event) => {
      if (searchRef.current && !searchRef.current.contains(event.target)) {
        closeSearch();
      }
    };

    if (isSearchOpen) {
      document.addEventListener('mousedown', handleClickOutside);
      inputRef.current?.focus();
    }

    return () => {
      document.removeEventListener('mousedown', handleClickOutside);
    };
  }, [isSearchOpen, closeSearch]);

  const handleSearchClick = () => {
    if (!isSearchOpen) {
      openSearch();
    }
  };


  const handleResultClick = (product) => {
  // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é (–µ—Å–ª–∏ –≤ –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏)
  if (onResultClick) {
    onResultClick(); // –≠—Ç–æ setIsMenuOpen(false)
  }
  
  // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ–∏—Å–∫
  closeSearch();
  
  // –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø–µ—Ä–µ–¥ –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π
  setTimeout(() => {
    const element = document.getElementById(`product-${product.id}`);
    if (element) {
      element.scrollIntoView({ 
        behavior: 'smooth',
        block: 'center'
      });
      
      element.classList.add('highlight-product');
      setTimeout(() => {
        element.classList.remove('highlight-product');
      }, 2000);
    }
  }, 300); // –ñ–¥–µ–º –∑–∞–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é
};


  const clearSearch = () => {
    setSearchQuery('');
    inputRef.current?.focus();
  };

  return (
    <div className="search-container" ref={searchRef}>
      {/* –ö–Ω–æ–ø–∫–∞ –ø–æ–∏—Å–∫–∞ */}
      <button 
        className="search-toggle"
        onClick={handleSearchClick}
        aria-label="–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤"
      >
      </button>

      {/* –ü–æ–ª–µ –ø–æ–∏—Å–∫–∞ */}
      <div className={`search-field ${isSearchOpen ? 'active' : ''}`}>
        <div className="search-input-wrapper">
          <input
            ref={inputRef}
            type="text"
            placeholder="–ù–∞–π—Ç–∏ –∞—Ä–æ–º–∞—Ç –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏—é..."
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
            className="search-input"
          />
          
          {searchQuery && (
            <button 
              className="search-clear"
              onClick={clearSearch}
              aria-label="–û—á–∏—Å—Ç–∏—Ç—å –ø–æ–∏—Å–∫"
            >
              √ó
            </button>
          )}
        </div>

        {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ */}
        {isSearchOpen && searchQuery && (
          <div className="search-results">
            {hasResults ? (
              <>
                <div className="search-results-header">
                  <span className="results-count">–ù–∞–π–¥–µ–Ω–æ –∞—Ä–æ–º–∞—Ç–æ–≤: {searchResults.length}</span>
                  <div className="search-hint">
                    üîç –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ ‚Üë‚Üì –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
                  </div>
                </div>
                
                <div className="search-results-list">
                  {searchResults.map((product, index) => (
                    <div
                      key={product.id}
                      className="search-result-item"
                      onClick={() => handleResultClick(product)}
                    >
                      <div className="product-card">
                        <div className="product-image-container">
                          <img 
                            src={product.image} 
                            alt={product.name}
                            className="product-image"
                          />
                          <div className="product-overlay">
                            <span className="view-product">–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å</span>
                          </div>
                        </div>
                        
                        <div className="product-content">
                          <div className="product-header">
                            <h4 className="product-name">{product.name}</h4>
                            <span className="product-price">{product.price}</span>
                          </div>
                          
                          <p className="product-description">
                            {product.description}
                          </p>
                          
                          <div className="product-meta">
                            <div className="product-rating">
                              <span className="rating-stars">‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ</span>
                              <span className="rating-text">–ü—Ä–µ–º–∏—É–º</span>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              </>
            ) : (
              <div className="search-no-results">
                <div className="no-results-illustration">
                  <div className="perfume-bottle">üß¥</div>
                  <div className="search-waves">üåäüåÄ</div>
                </div>
                <h4>–ê—Ä–æ–º–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω</h4>
                <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤—Å—é –∫–æ–ª–ª–µ–∫—Ü–∏—é</p>
                <button className="browse-collection-btn" onClick={closeSearch}>
                  –°–º–æ—Ç—Ä–µ—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏—é
                </button>
              </div>
            )}
          </div>
        )}
      </div>

      {/* Overlay –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö */}
      {isSearchOpen && <div className="search-overlay" onClick={closeSearch} />}
    </div>
  );
};

export default SearchBar;