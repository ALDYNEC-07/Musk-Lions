// components/SearchBar/SearchBar.jsx
import React, { useRef, useEffect } from 'react';
import { useNavigate, useLocation } from 'react-router-dom';
import './SearchBar.css';
import { useSearch } from '../../hooks/useSearch';
import { products } from '../../data/products'; // ‚úÖ –î–õ–Ø –ü–†–û–í–ï–†–ö–ò –ù–ê –ì–õ–ê–í–ù–û–ô

const SearchBar = ({onResultClick}) => {
  const navigate = useNavigate();
  const location = useLocation();
  
  const {
    searchQuery,
    setSearchQuery,
    searchResults,
    isSearchOpen,
    openSearch,
    closeSearch,
    hasResults
  } = useSearch();

  const searchRef = useRef(null);
  const inputRef = useRef(null);

  useEffect(() => {
    const handleClickOutside = (event) => {
      if (searchRef.current && !searchRef.current.contains(event.target)) {
        closeSearch();
      }
    };

    if (isSearchOpen) {
      document.addEventListener('mousedown', handleClickOutside);
      inputRef.current?.focus();
    }

    return () => {
      document.removeEventListener('mousedown', handleClickOutside);
    };
  }, [isSearchOpen, closeSearch]);

  const handleSearchClick = () => {
    if (!isSearchOpen) {
      openSearch();
    }
  };

  const handleResultClick = (product) => {
    if (onResultClick) {
      onResultClick();
    }
    
    closeSearch();
    
    setTimeout(() => {
      const currentPath = location.pathname;
      
      // üéØ –£–ú–ù–ê–Ø –ü–†–û–ö–†–£–¢–ö–ê –í –ó–ê–í–ò–°–ò–ú–û–°–¢–ò –û–¢ –°–¢–†–ê–ù–ò–¶–´
      if (currentPath === '/') {
        // –ù–ê –ì–õ–ê–í–ù–û–ô - –ü–†–û–í–ï–†–Ø–ï–ú –ï–°–¢–¨ –õ–ò –¢–û–í–ê–† –í 5 –û–°–ù–û–í–ù–´–•
        const isOnHomePage = products.some(p => p.id === product.id);
        
        if (isOnHomePage) {
          // –¢–û–í–ê–† –ï–°–¢–¨ –ù–ê –ì–õ–ê–í–ù–û–ô - –ü–†–û–ö–†–£–ß–ò–í–ê–ï–ú –ö –ù–ï–ú–£
          const element = document.getElementById(`product-${product.id}`);
          if (element) {
            element.scrollIntoView({ 
              behavior: 'smooth',
              block: 'center'
            });
            
            element.classList.add('highlight-product');
            setTimeout(() => {
              element.classList.remove('highlight-product');
            }, 2000);
          }
        } else {
          // –¢–û–í–ê–†–ê –ù–ï–¢ –ù–ê –ì–õ–ê–í–ù–û–ô - –ü–ï–†–ï–•–û–î–ò–ú –í –ö–û–õ–õ–ï–ö–¶–ò–Æ
          navigate('/collection');
          
          setTimeout(() => {
            const elementOnCollection = document.getElementById(`product-${product.id}`);
            if (elementOnCollection) {
              elementOnCollection.scrollIntoView({ 
                behavior: 'smooth',
                block: 'center'
              });
              
              elementOnCollection.classList.add('highlight-product');
              setTimeout(() => {
                elementOnCollection.classList.remove('highlight-product');
              }, 2000);
            }
          }, 100);
        }
      } else if (currentPath === '/collection') {
        // –ù–ê –°–¢–†–ê–ù–ò–¶–ï –ö–û–õ–õ–ï–ö–¶–ò–ò - –ü–†–û–ö–†–£–ß–ò–í–ê–ï–ú –ö –¢–û–í–ê–†–£
        const element = document.getElementById(`product-${product.id}`);
        if (element) {
          element.scrollIntoView({ 
            behavior: 'smooth',
            block: 'center'
          });
          
          element.classList.add('highlight-product');
          setTimeout(() => {
            element.classList.remove('highlight-product');
          }, 2000);
        }
      } else {
        // –ù–ê –î–†–£–ì–ò–• –°–¢–†–ê–ù–ò–¶–ê–• (WISHLIST) - –ü–ï–†–ï–•–û–î–ò–ú –í –ö–û–õ–õ–ï–ö–¶–ò–Æ
        navigate('/collection');
        
        setTimeout(() => {
          const elementOnCollection = document.getElementById(`product-${product.id}`);
          if (elementOnCollection) {
            elementOnCollection.scrollIntoView({ 
              behavior: 'smooth',
              block: 'center'
            });
            
            elementOnCollection.classList.add('highlight-product');
            setTimeout(() => {
              elementOnCollection.classList.remove('highlight-product');
            }, 2000);
          }
        }, 100);
      }
    }, 300);
  };

  const clearSearch = () => {
    setSearchQuery('');
    inputRef.current?.focus();
  };

  return (
    <div className="search-container" ref={searchRef}>
      <button 
        className="search-toggle"
        onClick={handleSearchClick}
        aria-label="–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤"
      >
      </button>

      <div className={`search-field ${isSearchOpen ? 'active' : ''}`}>
        <div className="search-input-wrapper">
          <input
            ref={inputRef}
            type="text"
            placeholder="–ù–∞–π—Ç–∏ –∞—Ä–æ–º–∞—Ç –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏—é..."
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
            className="search-input"
          />
          
          {searchQuery && (
            <button 
              className="search-clear"
              onClick={clearSearch}
              aria-label="–û—á–∏—Å—Ç–∏—Ç—å –ø–æ–∏—Å–∫"
            >
              √ó
            </button>
          )}
        </div>

        {isSearchOpen && searchQuery && (
          <div className="search-results">
            {hasResults ? (
              <>
                <div className="search-results-header">
                  <span className="results-count">–ù–∞–π–¥–µ–Ω–æ –∞—Ä–æ–º–∞—Ç–æ–≤: {searchResults.length}</span>
                  <div className="search-hint">
                    üîç –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ ‚Üë‚Üì –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
                  </div>
                </div>
                
                <div className="search-results-list">
                  {searchResults.map((product, index) => (
                    <div
                      key={product.id}
                      className="search-result-item"
                      onClick={() => handleResultClick(product)}
                    >
                      <div className="product-card">
                        <div className="product-image-container">
                          <img 
                            src={product.image} 
                            alt={product.name}
                            className="product-image"
                          />
                          <div className="product-overlay">
                            <span className="view-product">–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å</span>
                          </div>
                        </div>
                        
                        <div className="product-content">
                          <div className="product-header">
                            <h4 className="product-name">{product.name}</h4>
                            <span className="product-price">{product.price}</span>
                          </div>
                          
                          <p className="product-description">
                            {product.description}
                          </p>
                          
                          <div className="product-meta">
                            <div className="product-rating">
                              <span className="rating-stars">‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ</span>
                              <span className="rating-text">–ü—Ä–µ–º–∏—É–º</span>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              </>
            ) : (
              <div className="search-no-results">
                <div className="no-results-illustration">
                  <div className="perfume-bottle">üß¥</div>
                  <div className="search-waves">üåäüåÄ</div>
                </div>
                <h4>–ê—Ä–æ–º–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω</h4>
                <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤—Å—é –∫–æ–ª–ª–µ–∫—Ü–∏—é</p>
                <button 
                  className="browse-collection-btn" 
                  onClick={() => {
                    closeSearch();
                    navigate('/collection');
                  }}
                >
                  –°–º–æ—Ç—Ä–µ—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏—é
                </button>
              </div>
            )}
          </div>
        )}
      </div>

      {isSearchOpen && <div className="search-overlay" onClick={closeSearch} />}
    </div>
  );
};

export default SearchBar;